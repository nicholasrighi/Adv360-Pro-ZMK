#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/** shift if held, backspace if pressed */
#define BACK_SFT  &mt LEFT_SHIFT BACKSPACE
/** tab if pressed, swap to layer 2 if held */
#define TAB_2    &tp 5 TAB
/** enter if pressed, swap to layer 2 if held */
#define ENTER_2  &tp 5 ENTER 

/ {
    behaviors {
      #include "macros.dtsi"
      #include "version.dtsi"
      #include "behaviors.dtsi"
      #include "combos.dtsi"
      #ifndef VERSION_MACRO
      macro_ver: macro_ver {
        compatible = "zmk,behavior-macro";
        label = "macro_version";
        #binding-cells = <0>;
        bindings = <&kp RET>;
      };
      #endif

      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick_tap_ms = <175>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };
    };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp EQUAL &kp N1    &kp N2   &kp N3   &kp N4     &kp N5 &tog 1                                                           &mo 3 &kp N6 &kp N7   &kp N8    &kp N9   &kp N0   &tog 6
        &kp TAB   &kp Q     &kp W    &kp E    &kp R      &kp T  &none                                                            &none &kp Y  &kp U    &kp I     &kp O    &kp P    &kp BSLH
        &kp ESC   &kp A     &kp S    &kp D    &kp F      &kp G  &none           &kp LCTRL &kp LALT &kp LGUI  &kp RCTRL           &none &kp H  &kp J    &kp K     &kp L    &kp SEMI &kp SQT
        &kp LSHFT &kp Z     &kp X    &kp C    &kp V      &kp B                            &kp HOME &kp PG_UP                           &kp N  &kp M    &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
        &mo 2     &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT                BACK_SFT TAB_2     &kp END  &kp TAB   ENTER_2   &kp SPACE              &kp DOWN &kp UP    &kp LBKT &kp RBKT &mo 2
      >;
    };
    keypad {
      bindings = <
        &kp EQUAL &kp N1    &kp N2   &kp N3   &kp N4     &kp N5 &trans                                                           &mo 3 &kp N6 &kp KP_NUM &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &kp MINUS
        &kp TAB   &kp Q     &kp W    &kp E    &kp R      &kp T  &none                                                            &none &kp Y  &kp KP_N7  &kp KP_N8    &kp KP_N9     &kp KP_MINUS    &kp BSLH
        &kp ESC   &kp A     &kp S    &kp D    &kp F      &kp G  &none           &kp LCTRL &kp LALT &kp LGUI  &kp RCTRL           &none &kp H  &kp KP_N4  &kp KP_N5    &kp KP_N6     &kp KP_PLUS     &kp SQT
        &kp LSHFT &kp Z     &kp X    &kp C    &kp V      &kp B                            &kp HOME &kp PG_UP                           &kp N  &kp KP_N1  &kp KP_N2    &kp KP_N3     &kp KP_ENTER    &kp RSHFT
        &mo 2     &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT                &kp BSPC &kp DEL   &kp END  &kp PG_DN &kp ENTER &kp KP_N0              &kp UP     &kp DOWN     &kp KP_DOT    &kp RBKT        &mo 2
      >;
    };
    fn {
      bindings = <
        &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &tog 1                                           &mo 3 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
        &trans &trans &trans &trans &trans &trans  &none                                           &none &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans &trans  &none        &trans &trans &trans &trans        &none &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans &trans                      &trans &trans                     &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans               &trans &trans &trans &trans &trans &trans              &trans &trans &trans  &trans  &trans
      >;
    };
    mod {
      bindings = <
        &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                                     &trans                 &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &bootloader                                                               &bootloader            &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &none                   &none &none &bt BT_CLR &none                      &rgb_ug RGB_MEFS_CMD 5 &none        &none        &none        &none &none &none
        &none &none        &none        &none        &macro_ver   &none                                      &none &none                                                        &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none                                       &none &none &none &none      &bl BL_TOG &rgb_ug RGB_TOG                                     &bl BL_INC   &bl BL_DEC   &none &none &none
      >;
    };
    layer_Numbers {
            bindings = <
        &trans &trans    &trans   &trans   &trans     &trans &tog 1                                                 &mo 3 &trans &trans &trans  &trans &trans &trans
        &trans &trans    &kp N1   &kp N2   &kp N3     &trans &none                                                  &none &trans &trans &trans  &trans &trans &trans
        &trans &kp N0    &kp N4   &kp N5   &kp N6     &trans &none           &trans &trans &trans  &trans           &none &trans &trans &trans  &trans &trans &trans
        &trans &trans    &kp N7   &kp N8   &kp N9     &trans                        &trans &trans                         &trans &trans &trans  &trans &trans &trans
        &mo 2  &trans    &trans   &trans   &trans                     &trans &trans &trans &trans  &trans &trans                 &trans &trans  &trans &trans &mo 2
            >;
        };

    layer_Symbols {
            bindings = <
        &trans &trans    &trans        &trans    &trans            &trans      &tog 1                                                 &mo 3   &trans      &trans               &trans                &trans    &trans            &trans
        &trans &kp PLUS  &kp AT        &kp HASH  &kp EXCL          &trans      &none                                                  &none   &kp TILDE   &kp LEFT_BRACKET     &kp RIGHT_BRACKET     &trans    &trans            &trans
        &trans &kp STAR  &kp LESS_THAN &kp EQUAL &kp GREATER_THAN  &kp CARET   &trans          &none  &trans &trans &trans            &trans  &kp DOLLAR  &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp UNDER &kp DOUBLE_QUOTES &trans
        &trans &kp MINUS &kp BSLH      &kp AMPS  &kp PIPE          &kp PERCENT                        &trans &trans                           &kp FSLH    &kp LEFT_BRACE       &kp RIGHT_BRACE       &kp SLASH &trans            &trans
        &mo 2  &trans    &trans        &trans    &trans                                 &trans &trans &trans &trans &trans &kp COLON                      &trans               &trans                &trans    &trans            &mo 2

            >;
        };

    layer_league {
      bindings = <
        &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &tog 1                                             &mo 3 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
        &trans &trans &trans &trans &trans &trans  &none                                             &none &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans &trans  &none          &trans &trans &trans &trans        &none &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans &trans                        &trans &trans                     &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans               &kp BSPC &trans &trans &trans &trans &trans              &trans &trans &trans  &trans  &trans
      >;
        };
  };
};
